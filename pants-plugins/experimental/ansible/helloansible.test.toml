"helloansible/playbook.yml" = "---\n- hosts: localhost\n  tasks:\n    - name: A do-nothing shell command\n      ansible.builtin.shell: ls\n      register: shell_result\n\n    - name: Print out the results of the shell command\n      ansible.builtin.debug:\n        var: shell_result\n\n    - name: include some tasks from context\n      include_tasks: tasks/main.yml\n\n- import_playbook: other_playbook.yml\n"
"helloansible/other_playbook.yml" = "---\n- name: other playbook\n  hosts: localhost\n  connection: local\n  gather_facts: false\n\n  tasks:\n    - name: log from other playbook\n      debug:\n        msg: >-\n          Hello I am in another playbook\n"
"helloansible/BUILD.pants" = "ansible_deployment(\n    name=\"helloansible\",\n    dependencies=[\"\"],\n    playbook=\"playbook.yml\",\n    #inventory=\"\", # TODO: Could this be setup like the Docker registries? in pants.toml\n    #tags=\"\", # TODO: Might need a different name to not overlap\n    #timeout=\"\",\n)"
"helloansible/tasks/main.yml" = "---\n- name: log from tasks folder\n  debug:\n    msg: >-\n      Hello I am in the tasks folder\n"
"helloansible/hello/BUILD" = ""
"helloansible/hello/collection/BUILD" = "ansible_collection(\n\tname=\"hello.collection\",\n\tdependencies=[\"\"],\n)"
"helloansible/hello/collection/README.md" = "# Ansible Collection - hello.collection\n\nDocumentation for the collection.\n"
"helloansible/hello/collection/galaxy.yml" = "### REQUIRED\n# The namespace of the collection. This can be a company/brand/organization or product namespace under which all\n# content lives. May only contain alphanumeric lowercase characters and underscores. Namespaces cannot start with\n# underscores or numbers and cannot contain consecutive underscores\nnamespace: hello\n\n# The name of the collection. Has the same character restrictions as 'namespace'\nname: collection\n\n# The version of the collection. Must be compatible with semantic versioning\nversion: 1.0.0\n\n# The path to the Markdown (.md) readme file. This path is relative to the root of the collection\nreadme: README.md\n\n# A list of the collection's content authors. Can be just the name or in the format 'Full Name <email> (url)\n# @nicks:irc/im.site#channel'\nauthors:\n- your name <example@domain.com>\n\n\n### OPTIONAL but strongly recommended\n# A short summary description of the collection\ndescription: your collection description\n\n# Either a single license or a list of licenses for content inside of a collection. Ansible Galaxy currently only\n# accepts L(SPDX,https://spdx.org/licenses/) licenses. This key is mutually exclusive with 'license_file'\nlicense:\n- GPL-2.0-or-later\n\n# The path to the license file for the collection. This path is relative to the root of the collection. This key is\n# mutually exclusive with 'license'\nlicense_file: ''\n\n# A list of tags you want to associate with the collection for indexing/searching. A tag name has the same character\n# requirements as 'namespace' and 'name'\ntags: []\n\n# Collections that this collection requires to be installed for it to be usable. The key of the dict is the\n# collection label 'namespace.name'. The value is a version range\n# L(specifiers,https://python-semanticversion.readthedocs.io/en/latest/#requirement-specification). Multiple version\n# range specifiers can be set and are separated by ','\ndependencies: {}\n\n# The URL of the originating SCM repository\nrepository: http://example.com/repository\n\n# The URL to any online docs\ndocumentation: http://docs.example.com\n\n# The URL to the homepage of the collection/project\nhomepage: http://example.com\n\n# The URL to the collection issue tracker\nissues: http://example.com/issue/tracker\n\n# A list of file glob-like patterns used to filter any files or directories that should not be included in the build\n# artifact. A pattern is matched from the relative path of the file or directory of the collection directory. This\n# uses 'fnmatch' to match the files or directories. Some directories and files like 'galaxy.yml', '*.pyc', '*.retry',\n# and '.git' are always filtered\nbuild_ignore: []\n\n"
"helloansible/hello/collection/plugins/README.md" = "# Collections Plugins Directory\n\nThis directory can be used to ship various plugins inside an Ansible collection. Each plugin is placed in a folder that\nis named after the type of plugin it is in. It can also include the `module_utils` and `modules` directory that\nwould contain module utils and modules respectively.\n\nHere is an example directory of the majority of plugins currently supported by Ansible:\n\n```\n└── plugins\n    ├── action\n    ├── become\n    ├── cache\n    ├── callback\n    ├── cliconf\n    ├── connection\n    ├── filter\n    ├── httpapi\n    ├── inventory\n    ├── lookup\n    ├── module_utils\n    ├── modules\n    ├── netconf\n    ├── shell\n    ├── strategy\n    ├── terminal\n    ├── test\n    └── vars\n```\n\nA full list of plugin types can be found at [Working With Plugins](https://docs.ansible.com/ansible-core/2.12/plugins/plugins.html).\n"
"helloansible/hello/collection/playbooks/playbook.yml" = "---\n- hosts: localhost\n  tasks:\n    - name: Create an error in the collection lints\n      ansible.builtin.shell: ls\n      register: shell_result\n"
"helloansible/hello/collection/roles/BUILD" = ""
"helloansible/hello/collection/roles/hellorole/BUILD" = "ansible_role(\n\tname=\"helloansiblerole\",\n\tdependencies=[\"\"],\n)"
"helloansible/hello/collection/roles/hellorole/README.md" = "Role Name\n=========\n\nA brief description of the role goes here.\n\nRequirements\n------------\n\nAny pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.\n\nRole Variables\n--------------\n\nA description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.\n\nDependencies\n------------\n\nA list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.\n\nExample Playbook\n----------------\n\nIncluding an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:\n\n    - hosts: servers\n      roles:\n         - { role: username.rolename, x: 42 }\n\nLicense\n-------\n\nBSD\n\nAuthor Information\n------------------\n\nAn optional section for the role authors to include contact information, or a website (HTML is not allowed).\n"
"helloansible/hello/collection/roles/hellorole/defaults/main.yml" = "---\n# defaults file for hellorole\n"
"helloansible/hello/collection/roles/hellorole/vars/main.yml" = "---\n# vars file for hellorole\n"
"helloansible/hello/collection/roles/hellorole/meta/main.yml" = "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n"
"helloansible/hello/collection/roles/hellorole/tasks/main.yml" = "---\n- name: display in role\n  debug:\n    msg: |\n      Hello from role\n\n- name: trigger error in ansible-lint\n  shell: >-\n    echo \"hello from shell in role\"\n\n- name: trigger handler to test that handlers are included\n  debug:\n    msg: |\n      trigger handler in role\n  changed_when: true\n  notify:\n    - \"trigger handler\"\n"
"helloansible/hello/collection/roles/hellorole/handlers/main.yml" = "---\n- name: trigger handler\n  debug:\n    msg: |\n      handler triggered\n"
"helloansible/hello/collection/roles/hellorole/tests/test.yml" = "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - hellorole\n"
"helloansible/hello/collection/roles/hellorole/tests/inventory" = "localhost\n\n"
